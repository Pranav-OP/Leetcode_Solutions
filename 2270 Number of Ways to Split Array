class Solution {
public:
    int waysToSplitArray(vector<int>& nums) {

        int n = nums.size();
        vector<long long> prefSum(n) ;
        int ans = 0;
        prefSum[0] = nums[0];

        // Building prefixSum array
        for(int i=1; i<n; i++){
            prefSum[i] = prefSum[i-1] + nums[i];
        }

        // Checking for split positions count
        for(int i=0; i<n-1; i++){
            long long leftSum = prefSum[i];
            long long rightSum = prefSum[n-1] - prefSum[i]; 

            if(leftSum >= rightSum){
                ans++;
            }
        }

        return ans;
    }
};